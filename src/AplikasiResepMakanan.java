
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.json.JSONObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class AplikasiResepMakanan extends javax.swing.JFrame {

    /**
     * Creates new form AplikasiResepMakanan
     */
    
    
    
    public AplikasiResepMakanan() {
        initComponents();
        ComboBoxKategori.addItem("Kuah");
        ComboBoxKategori.addItem("Goreng");
        ComboBoxKategori.addItem("Panggang");
        ComboBoxKategori.addItem("Rebus");
        ComboBoxKategori.addItem("Kukus");
        ComboBoxKategori.addItem("Bakar");
        ComboBoxKategori.addItem("Tumis");
        ComboBoxKategori.addItem("Salai/Asap");
        ComboBoxKategori.addItem("Panggang Oven");
        ComboBoxKategori.addItem("Fermentasi");
        ComboBoxKategori.addItem("Mentah");
        ComboBoxKategori.addItem("Goreng Tepung");
        ComboBoxKategori.addItem("Sangrai");
        ComboBoxKategori.addItem("Slow Cook");
        ComboBoxKategori.addItem("Dibekukan");

        Connection conn = ResepHelper.KoneksiDatabase();
        if (conn != null) {
            ResepHelper.MembuatTabelResep();
            MenampilkanResep();
        } else {
            System.out.println("Koneksi gagal, tabel tidak dapat dibuat.");
        }
    }
    
    private void MenampilkanResep() {
        List<Map<String, String>> resep = ResepHelper.DapatkanResep();
        DefaultTableModel model = (DefaultTableModel) TabelDaftarResep.getModel();
        model.setRowCount(0); // Bersihkan tabel

        for (Map<String, String> data : resep) {
            model.addRow(new Object[]{
                data.get("id"),
                data.get("nama_resep"),
                data.get("bahan_bahan"),
                data.get("langkah_langkah"),
                data.get("kategori")
            });
        }
    }
    
    private void MembuatTabelResep() {
        String sql = "CREATE TABLE IF NOT EXISTS kontak (\n"
                    + " id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
                    + " nama_resep TEXT NOT NULL,\n"
                    + " bahanbahan TEXT NOT NULL,\n"
                    + " langkahlangkah TEXT NOT NULL,\n"
                    + " kategori TEXT NOT NULL\n"
                    + ");";
        try (Connection conn = ResepHelper.KoneksiDatabase();
             Statement stmt = conn.createStatement()) {
            stmt.execute(sql);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    public class ResepManagerFrame extends javax.swing.JFrame {

    public ResepManagerFrame() {
        initComponents();
        ResepHelper.MembuatTabelResep();  // Membuat tabel saat aplikasi dimulai
        MenampilkanResep();
    }
    }
    private boolean stopFetching = false;
    private Thread resepThread;
    
    
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        FieldMasukkanResep = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaBahanBahan = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaLangkahLangkah = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        ComboBoxKategori = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        FieldCariResep = new javax.swing.JTextField();
        TombolMuat = new javax.swing.JToggleButton();
        TombolSimpan = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelDaftarResep = new javax.swing.JTable();
        TombolCariResepData = new javax.swing.JButton();
        TombolTambahResep = new javax.swing.JToggleButton();
        TombolEditResep = new javax.swing.JButton();
        TombolHapusResep = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        FieldResepInternet = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        TombolCariInternet = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaResep = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Resep Makanan");

        jLabel2.setText("Nama Resep");

        FieldMasukkanResep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FieldMasukkanResepKeyTyped(evt);
            }
        });

        jLabel3.setText("Bahan - Bahan");
        jLabel3.setPreferredSize(new java.awt.Dimension(60, 14));

        jTextAreaBahanBahan.setColumns(20);
        jTextAreaBahanBahan.setRows(5);
        jScrollPane1.setViewportView(jTextAreaBahanBahan);

        jLabel4.setText("Langkah - Langkah");

        jTextAreaLangkahLangkah.setColumns(20);
        jTextAreaLangkahLangkah.setRows(5);
        jScrollPane2.setViewportView(jTextAreaLangkahLangkah);

        jLabel5.setText("Kategori Metode Resep");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Input Data Resep");

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Cari Resep");

        jLabel8.setText("Nama Resep");

        TombolMuat.setText("Muat/Import Resep");
        TombolMuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolMuatActionPerformed(evt);
            }
        });

        TombolSimpan.setText("Simpan/Export Resep");

        TabelDaftarResep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Nama Resep", "Bahan Bahan", "Langkah Langkah", "Kategori"
            }
        ));
        TabelDaftarResep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelDaftarResepMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TabelDaftarResep);

        TombolCariResepData.setText("Cari");
        TombolCariResepData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolCariResepDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(FieldCariResep, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TombolCariResepData))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(TombolMuat)
                                .addGap(84, 84, 84)
                                .addComponent(TombolSimpan))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FieldCariResep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TombolCariResepData))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TombolSimpan)
                    .addComponent(TombolMuat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        TombolTambahResep.setText("Tambah Resep");
        TombolTambahResep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolTambahResepActionPerformed(evt);
            }
        });

        TombolEditResep.setText("Edit Resep");
        TombolEditResep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolEditResepActionPerformed(evt);
            }
        });

        TombolHapusResep.setText("Hapus Resep");
        TombolHapusResep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolHapusResepActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Cari Resep Dari Internet");

        jLabel10.setText("Cari Resep");

        TombolCariInternet.setText("Cari");
        TombolCariInternet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolCariInternetActionPerformed(evt);
            }
        });

        txtAreaResep.setColumns(20);
        txtAreaResep.setRows(5);
        jScrollPane4.setViewportView(txtAreaResep);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(FieldResepInternet, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(TombolCariInternet)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FieldResepInternet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addComponent(TombolCariInternet))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addGap(35, 35, 35)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FieldMasukkanResep, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(31, 31, 31)
                            .addComponent(jScrollPane2))
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TombolTambahResep)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TombolEditResep)
                                .addGap(18, 18, 18)
                                .addComponent(TombolHapusResep)))))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(FieldMasukkanResep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(ComboBoxKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TombolTambahResep)
                    .addComponent(TombolEditResep)
                    .addComponent(TombolHapusResep))
                .addGap(99, 99, 99))
        );

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Aplikasi Resep Makanan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TombolCariInternetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolCariInternetActionPerformed
        // TODO add your handling code here:
        // Ambil kata kunci dari JTextField
    String query = FieldResepInternet.getText().trim();
    if (query.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan kata kunci pencarian!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Set flag untuk menghentikan thread sebelumnya
    stopFetching = true;
    if (resepThread != null && resepThread.isAlive()) {
        resepThread.interrupt(); // Beri sinyal ke thread untuk berhenti
    }

    // Reset flag untuk thread baru
    stopFetching = false;

    // Jalankan proses pengambilan resep secara asinkron
    txtAreaResep.setText("Sedang mencari resep untuk: " + query + "...\n");
    resepThread = new Thread(() -> {
        try {
            ResepHelper fetcher = new ResepHelper();
            fetcher.getResepBarisPerBaris(query, txtAreaResep, () -> stopFetching);

            if (!stopFetching) {
                SwingUtilities.invokeLater(() -> 
                    txtAreaResep.append("\nSelesai mengambil data resep."));
            }
        } catch (Exception e) {
            if (Thread.currentThread().isInterrupted()) {
                SwingUtilities.invokeLater(() ->
                    txtAreaResep.setText("Pengambilan data dibatalkan.\n"));
            } else {
                SwingUtilities.invokeLater(() -> 
                    txtAreaResep.setText("Gagal mendapatkan data resep: " + e.getMessage()));
            }
        }
    });
    resepThread.start();
    }//GEN-LAST:event_TombolCariInternetActionPerformed

    private void FieldMasukkanResepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldMasukkanResepKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        // Jika karakter bukan huruf atau spasi, batalkan event
        if (!Character.isLetter(c) && c != ' ') {
        evt.consume(); // Mengabaikan input non-huruf dan non-spasi
        JOptionPane.showMessageDialog(null, "Masukkan hanya huruf atau spasi.");
    }


    }//GEN-LAST:event_FieldMasukkanResepKeyTyped

    private void TombolTambahResepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolTambahResepActionPerformed
        // TODO add your handling code here:
        
        String nama = FieldMasukkanResep.getText();
        String bahan_bahan = jTextAreaBahanBahan.getText();
        String langkah_langkah = jTextAreaLangkahLangkah.getText();
        String kategori = (String) ComboBoxKategori.getSelectedItem();

        // Validasi input nama_resep, bahanbahan, langkahlangkah, dan kategori
        if (nama.isEmpty() || bahan_bahan.isEmpty() || langkah_langkah.isEmpty() || kategori == null) {
            JOptionPane.showMessageDialog(this, "Semua data harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }


        // Tambah data resep ke database
        ResepHelper.MenambahResep(nama, bahan_bahan, langkah_langkah, kategori);

        // Bersihkan input setelah menambah resep
        FieldMasukkanResep.setText("");
        jTextAreaBahanBahan.setText("");
        jTextAreaLangkahLangkah.setText("");
        ComboBoxKategori.setSelectedIndex(0);

        JOptionPane.showMessageDialog(this, "Resep berhasil ditambahkan!");
        MenampilkanResep();
    }//GEN-LAST:event_TombolTambahResepActionPerformed

    private void TombolEditResepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolEditResepActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabelDaftarResep.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Resep Yang Ingin Diedit", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String nama = FieldMasukkanResep.getText();
        String bahan_bahan = jTextAreaBahanBahan.getText();
        String langkah_langkah = jTextAreaLangkahLangkah.getText();
        String kategori = (String) ComboBoxKategori.getSelectedItem();

        // Validasi input nama, bahanbahan, langkahlangkah, dan kategori
        if (nama.isEmpty() || bahan_bahan.isEmpty() || langkah_langkah.isEmpty() || kategori == null) {
            JOptionPane.showMessageDialog(this, "Semua Data Harus Diinput!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }


        // Dapatkan id dari baris yang dipilih untuk pengeditan
        int id = Integer.parseInt(TabelDaftarResep.getValueAt(selectedRow, 0).toString());

        // Update data kontak di database
        ResepHelper.MemperbaruiResep(id, nama, bahan_bahan, langkah_langkah, kategori);

        JOptionPane.showMessageDialog(this, "Resep berhasil diperbarui!");

        // Kosongkan semua field setelah edit
        FieldMasukkanResep.setText("");
        jTextAreaBahanBahan.setText("");
        jTextAreaLangkahLangkah.setText("");
        ComboBoxKategori.setSelectedIndex(-1);
        MenampilkanResep();
    }//GEN-LAST:event_TombolEditResepActionPerformed

    private void TombolHapusResepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolHapusResepActionPerformed
         // TODO add your handling code here:
        int RowDipilih = TabelDaftarResep.getSelectedRow();
        if (RowDipilih == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Resep Yang Ingin Dihapus", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int id = Integer.parseInt(TabelDaftarResep.getValueAt(RowDipilih, 0).toString());

        // Konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda Yakin Ingin Menghapus Resep Ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            ResepHelper.MenghapusResep(id);

            JOptionPane.showMessageDialog(this, "Resep Berhasil Dihapus!");

            // Kosongkan semua field setelah edit
            FieldMasukkanResep.setText("");
            jTextAreaBahanBahan.setText("");
            jTextAreaLangkahLangkah.setText("");
            ComboBoxKategori.setSelectedIndex(-1); // Mengatur JComboBox agar tidak ada yang dipilih

            // Refresh JTable atau tampilan daftar Resep
            MenampilkanResep(); 
        }
        
    }//GEN-LAST:event_TombolHapusResepActionPerformed

    private void TombolCariResepDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolCariResepDataActionPerformed
        // TODO add your handling code here:
        String keyword = FieldCariResep.getText().trim();  // Ambil kata kunci dari JTextField

        // Validasi input pencarian
        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Masukkan Nama Resep Untuk Dicari.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<Map<String, String>> hasilPencarian = ResepHelper.MencariResep(keyword);
        DefaultTableModel model = (DefaultTableModel) TabelDaftarResep.getModel();
        model.setRowCount(0); // Bersihkan tabel

        // Tampilkan hasil pencarian di JTable
        for (Map<String, String> data : hasilPencarian) {
            model.addRow(new Object[]{
                data.get("id"),
                data.get("nama_resep"),
                data.get("bahan_bahan"),
                data.get("langkah_langkah"),
                data.get("kategori")
            });
        }
    }//GEN-LAST:event_TombolCariResepDataActionPerformed

    private void TabelDaftarResepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelDaftarResepMouseClicked
        // TODO add your handling code here:
        int rowDipilih = TabelDaftarResep.getSelectedRow();

        if (rowDipilih != -1) { // Pastikan ada baris yang dipilih
            // Ambil data dari kolom pada baris yang dipilih
            String id = TabelDaftarResep.getValueAt(rowDipilih, 0).toString();
            String nama = TabelDaftarResep.getValueAt(rowDipilih, 1).toString();
            String bahan_bahan = TabelDaftarResep.getValueAt(rowDipilih, 2).toString();
            String langkah_langkah = TabelDaftarResep.getValueAt(rowDipilih, 3).toString();
            String kategori = TabelDaftarResep.getValueAt(rowDipilih, 4).toString();

            // Set data ke JTextField dan JComboBox
            FieldMasukkanResep.setText(nama);
            jTextAreaBahanBahan.setText(bahan_bahan);
            jTextAreaLangkahLangkah.setText(langkah_langkah);
            ComboBoxKategori.setSelectedItem(kategori); // Set item JComboBox sesuai kategori
        }
    }//GEN-LAST:event_TabelDaftarResepMouseClicked

    private void TombolMuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolMuatActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Pilih file CSV untuk diimpor");
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            try (BufferedReader br = new BufferedReader(new FileReader(selectedFile))) {
                String line;
                // Lewati header (baris pertama)
                br.readLine();

                while ((line = br.readLine()) != null) {
                    String[] values = line.split(",");
                    if (values.length >= 4) {
                        String nama_resep = values[1].trim();
                        String bahanbahan = values[2].trim();
                        String langkahlangkah = values[3].trim();
                        String kategori = values[4].trim();

                        // Tambahkan kontak ke database
                        ResepHelper.MenambahResep(nama_resep, bahanbahan, langkahlangkah, kategori);
                    }
                }

                JOptionPane.showMessageDialog(this, "Data berhasil diimpor dari " + selectedFile.getName());
                MenampilkanResep(); // Refresh JTable dengan data baru
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error saat mengimpor data: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_TombolMuatActionPerformed

    private void MenampilkanResepBerdasarkanKategori(String kategori) {
        List<Map<String, String>> resep = ResepHelper.DapatkanResep();
        DefaultTableModel model = (DefaultTableModel) TabelDaftarResep.getModel();
        model.setRowCount(0); // Bersihkan tabel

        for (Map<String, String> data : resep) {
            // Jika kategori adalah "Semua", tampilkan semua data; jika tidak, filter berdasarkan kategori
            if (kategori.equals("Semua") || kategori.equals(data.get("kategori"))) {
                model.addRow(new Object[]{
                    data.get("id"),
                    data.get("nama_resep"),
                    data.get("bahan_bahan"),
                    data.get("langkah_langkah"),
                    data.get("kategori")
                });
            }
        }
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplikasiResepMakanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplikasiResepMakanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplikasiResepMakanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplikasiResepMakanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AplikasiResepMakanan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxKategori;
    private javax.swing.JTextField FieldCariResep;
    private javax.swing.JTextField FieldMasukkanResep;
    private javax.swing.JTextField FieldResepInternet;
    private javax.swing.JTable TabelDaftarResep;
    private javax.swing.JButton TombolCariInternet;
    private javax.swing.JButton TombolCariResepData;
    private javax.swing.JButton TombolEditResep;
    private javax.swing.JButton TombolHapusResep;
    private javax.swing.JToggleButton TombolMuat;
    private javax.swing.JButton TombolSimpan;
    private javax.swing.JToggleButton TombolTambahResep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextAreaBahanBahan;
    private javax.swing.JTextArea jTextAreaLangkahLangkah;
    private javax.swing.JTextArea txtAreaResep;
    // End of variables declaration//GEN-END:variables
}
